"use strict";(self.webpackChunk_xrengine_docs=self.webpackChunk_xrengine_docs||[]).push([[31670],{3905:function(e,r,n){n.d(r,{Zo:function(){return u},kt:function(){return p}});var t=n(67294);function a(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function s(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function o(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?s(Object(n),!0).forEach((function(r){a(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function c(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},s=Object.keys(e);for(t=0;t<s.length;t++)n=s[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(t=0;t<s.length;t++)n=s[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=t.createContext({}),l=function(e){var r=t.useContext(i),n=r;return e&&(n="function"==typeof e?e(r):o(o({},r),e)),n},u=function(e){var r=l(e.components);return t.createElement(i.Provider,{value:r},e.children)},f={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},d=t.forwardRef((function(e,r){var n=e.components,a=e.mdxType,s=e.originalType,i=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=l(n),p=a,m=d["".concat(i,".").concat(p)]||d[p]||f[p]||s;return n?t.createElement(m,o(o({ref:r},u),{},{components:n})):t.createElement(m,o({ref:r},u))}));function p(e,r){var n=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var s=n.length,o=new Array(s);o[0]=d;var c={};for(var i in r)hasOwnProperty.call(r,i)&&(c[i]=r[i]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var l=2;l<s;l++)o[l]=n[l];return t.createElement.apply(null,o)}return t.createElement.apply(null,n)}d.displayName="MDXCreateElement"},53715:function(e,r,n){n.r(r),n.d(r,{frontMatter:function(){return c},contentTitle:function(){return i},metadata:function(){return l},toc:function(){return u},default:function(){return d}});var t=n(87462),a=n(63366),s=(n(67294),n(3905)),o=["components"],c={id:"scene_classes_water_shaders_surface_fragment",title:"Module: scene/classes/water/shaders/surface/fragment",sidebar_label:"scene/classes/water/shaders/surface/fragment",sidebar_position:0,custom_edit_url:null},i=void 0,l={unversionedId:"generated/engine/modules/scene_classes_water_shaders_surface_fragment",id:"generated/engine/modules/scene_classes_water_shaders_surface_fragment",isDocsHomePage:!1,title:"Module: scene/classes/water/shaders/surface/fragment",description:"Properties",source:"@site/docs/generated/engine/modules/scene_classes_water_shaders_surface_fragment.md",sourceDirName:"generated/engine/modules",slug:"/generated/engine/modules/scene_classes_water_shaders_surface_fragment",permalink:"/xrengine-docs/docs/generated/engine/modules/scene_classes_water_shaders_surface_fragment",editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"scene_classes_water_shaders_surface_fragment",title:"Module: scene/classes/water/shaders/surface/fragment",sidebar_label:"scene/classes/water/shaders/surface/fragment",sidebar_position:0,custom_edit_url:null},sidebar:"sidebar",previous:{title:"scene/classes/water/WaveSimulator",permalink:"/xrengine-docs/docs/generated/engine/modules/scene_classes_water_WaveSimulator"},next:{title:"scene/classes/water/shaders/surface/vertex",permalink:"/xrengine-docs/docs/generated/engine/modules/scene_classes_water_shaders_surface_vertex"}},u=[{value:"Properties",id:"properties",children:[{value:"default",id:"default",children:[],level:3}],level:2}],f={toc:u};function d(e){var r=e.components,n=(0,a.Z)(e,o);return(0,s.kt)("wrapper",(0,t.Z)({},f,n,{components:r,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"properties"},"Properties"),(0,s.kt)("h3",{id:"default"},"default"),(0,s.kt)("p",null,"\u2022 ",(0,s.kt)("strong",{parentName:"p"},"default"),": ",(0,s.kt)("inlineCode",{parentName:"p"},'"\\nuniform sampler2D envMap;\\nuniform samplerCube skybox;\\n\\nvarying vec2 refractedPosition[3];\\nvarying vec3 reflected;\\nvarying float reflectionFactor;\\n\\nvarying vec2 vUv;\\n\\nvoid main() {\\n\\n  float circle = step(length(vUv - 0.5), 0.5);\\n  if(circle == 0.){\\n    discard;\\n  }\\n\\n  // Color coming from the sky reflection\\n  vec3 reflectedColor = textureCube(skybox, reflected).xyz;\\n\\n  // Color coming from the environment refraction, applying chromatic aberration\\n  vec3 refractedColor = vec3(1.);\\n  refractedColor.r = texture2D(envMap, refractedPosition[0] * 0.5 + 0.5).r;\\n  refractedColor.g = texture2D(envMap, refractedPosition[1] * 0.5 + 0.5).g;\\n  refractedColor.b = texture2D(envMap, refractedPosition[2] * 0.5 + 0.5).b;\\n\\n  gl_FragColor = vec4(mix(refractedColor, reflectedColor, clamp(reflectionFactor, 0., 1.)), 1.);\\n}\\n"')))}d.isMDXComponent=!0}}]);