"use strict";(self.webpackChunk_xrengine_docs=self.webpackChunk_xrengine_docs||[]).push([[16212],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return m}});var r=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var u=r.createContext({}),a=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},c=function(e){var n=a(e.components);return r.createElement(u.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,u=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=a(t),m=i,f=d["".concat(u,".").concat(m)]||d[m]||p[m]||o;return t?r.createElement(f,s(s({ref:n},c),{},{components:t})):r.createElement(f,s({ref:n},c))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,s=new Array(o);s[0]=d;var l={};for(var u in n)hasOwnProperty.call(n,u)&&(l[u]=n[u]);l.originalType=e,l.mdxType="string"==typeof e?e:i,s[1]=l;for(var a=2;a<o;a++)s[a]=t[a];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},59203:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return u},metadata:function(){return a},toc:function(){return c},default:function(){return d}});var r=t(87462),i=t(63366),o=(t(67294),t(3905)),s=["components"],l={id:"physics_enums_CollisionGroups",title:"Module: physics/enums/CollisionGroups",sidebar_label:"physics/enums/CollisionGroups",sidebar_position:0,custom_edit_url:null},u=void 0,a={unversionedId:"generated/engine/modules/physics_enums_CollisionGroups",id:"generated/engine/modules/physics_enums_CollisionGroups",title:"Module: physics/enums/CollisionGroups",description:"Enumerations",source:"@site/docs/generated/engine/modules/physics_enums_CollisionGroups.md",sourceDirName:"generated/engine/modules",slug:"/generated/engine/modules/physics_enums_CollisionGroups",permalink:"/xrengine-docs/docs/generated/engine/modules/physics_enums_CollisionGroups",editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"physics_enums_CollisionGroups",title:"Module: physics/enums/CollisionGroups",sidebar_label:"physics/enums/CollisionGroups",sidebar_position:0,custom_edit_url:null},sidebar:"sidebar",previous:{title:"physics/components/VelocityComponent",permalink:"/xrengine-docs/docs/generated/engine/modules/physics_components_VelocityComponent"},next:{title:"physics/enums/PhysicsStates",permalink:"/xrengine-docs/docs/generated/engine/modules/physics_enums_PhysicsStates"}},c=[{value:"Enumerations",id:"enumerations",children:[],level:2},{value:"Variables",id:"variables",children:[{value:"DefaultCollisionMask",id:"defaultcollisionmask",children:[{value:"Defined in",id:"defined-in",children:[],level:4}],level:3}],level:2}],p={toc:c};function d(e){var n=e.components,t=(0,i.Z)(e,s);return(0,o.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"enumerations"},"Enumerations"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"../enums/physics_enums_CollisionGroups.CollisionGroups"},"CollisionGroups"))),(0,o.kt)("h2",{id:"variables"},"Variables"),(0,o.kt)("h3",{id:"defaultcollisionmask"},"DefaultCollisionMask"),(0,o.kt)("p",null,"\u2022 ",(0,o.kt)("strong",{parentName:"p"},"DefaultCollisionMask"),": ",(0,o.kt)("inlineCode",{parentName:"p"},"number")),(0,o.kt)("h4",{id:"defined-in"},"Defined in"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/XRFoundation/XREngine/blob/e02bc8a/packages/engine/src/physics/enums/CollisionGroups.ts#L14"},"packages/engine/src/physics/enums/CollisionGroups.ts:14")))}d.isMDXComponent=!0}}]);